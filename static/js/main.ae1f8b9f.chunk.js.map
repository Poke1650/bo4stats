{"version":3,"sources":["component/Header.js","component/search/SearchBar.js","component/search/SearchBox.js","api/util/APIRequestHandler.js","api/cod-api/Endpoints.js","api/cod-api/Games.js","api/cod-api/Platforms.js","api/cod-api/CodAPI.js","component/search/UserStats.js","component/Content.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","SearchBar","Input","icon","Icon","name","inverted","circular","link","placeholder","SearchBox","search_SearchBar","APIRequestHandler","url","fetch","then","res","json","body","method","JSON","stringify","BASE","Endpoints","VALIDATE","STATS","MATCHES","Games","BO4","BO3","WWII","INFINITY_WAR","Platforms","PSN","XBOX_LIVE","STEAM","BATTLE_NET","sanitizeUsername","username","replace","CodAPI","game","arguments","length","undefined","platform","query","concat","console","log","UserStats","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","shouldUpdate","isLoaded","data","users","_this2","querries","forEach","user","push","getUserStats","result","setState","Promise","all","forceUpdate","_this$state","message","Table","celled","Row","HeaderCell","map","Body","Cell","stats","longestkillstreak","curwinstreak","seconds","duration","moment","days","Math","floor","asDays","hours","asHours","time","timeplayed","kills","deaths","toFixed","ekia","hit","miss","percent","accuracy","hits","misses","assists","percentage","wins","losses","prestige","level","Content","search_SearchBox","search_UserStats","Footer","href","size","App","component_Header","component_Content","component_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae1f8b9f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"col12 colm12 colt12 header\">\r\n        <h1>BO4Stats</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\nimport { Icon, Input } from 'semantic-ui-react'\r\n\r\nclass SearchBar extends Component {\r\n    render() {\r\n      return (\r\n        <Input icon={<Icon name='search' inverted circular link />} placeholder='Search...' />\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SearchBar;","import React, { Component } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nclass SearchBox extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <h1>Search user</h1>\r\n        <SearchBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","class APIRequestHandler {\r\n  /**\r\n   * Query the given url and return a promise with the data in json\r\n   * @param {string} url the url to query\r\n   */\r\n  static query(url) {\r\n    return fetch(url).then(res => res.json());\r\n  }\r\n\r\n  /**\r\n   * Post JSON data to a given URL\r\n   * @param {string} url the url to post to\r\n   * @param {json} body Json objet to post\r\n   */\r\n  static post(url, body) {\r\n    return fetch(url, { method: \"POST\", body: JSON.stringify(body) }).then(\r\n      res => res.json()\r\n    );\r\n  }\r\n}\r\n\r\nexport default APIRequestHandler;\r\n","const BASE = 'https://cod-api.theapinetwork.com/api/';\r\n\r\nconst Endpoints = {\r\n    VALIDATE: BASE + 'validate',\r\n    STATS: BASE + 'stats',\r\n    MATCHES: BASE + 'matches'\r\n}\r\n\r\nexport default Endpoints;","const Games = {\r\n    BO4: 'bo4',\r\n    BO3: 'bo3',\r\n    WWII: 'wwii',\r\n    INFINITY_WAR: 'iw'\r\n}\r\n\r\nexport default Games;","const Platforms = {\r\n    PSN: 'psn',\r\n    XBOX_LIVE: 'xbl',\r\n    STEAM: 'steam',\r\n    BATTLE_NET: 'bnet'\r\n}\r\n\r\nexport default Platforms;","import APIRequestHandler from '../util/APIRequestHandler';\r\nimport Endpoints from './Endpoints';\r\nimport Games from './Games';\r\nimport Platforms from './Platforms';\r\n\r\nclass CodAPI {\r\n    static validate(username, game = Games.BO4 , platform = Platforms.BATTLE_NET) {\r\n        return APIRequestHandler.query(`${Endpoints.VALIDATE}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n    }\r\n\r\n    static getUserStats(username, game = Games.BO4 , platform = Platforms.BATTLE_NET) {\r\n        console.log(`${Endpoints.STATS}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n        return APIRequestHandler.query(`${Endpoints.STATS}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} username\r\n */\r\nfunction sanitizeUsername(username) {\r\n    return username.replace('#', '%23');\r\n}\r\n\r\nexport default CodAPI;","import React, { Component } from \"react\";\r\nimport CodAPI from \"../../api/cod-api/CodAPI\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nclass UserStats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      shouldUpdate: true,\r\n      isLoaded: false,\r\n      data: [],\r\n      users: [\"izotov#1214\", \"ozakin#11581\", \"cremz#1991\", \"yskio#1216\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let querries = [];\r\n\r\n    this.state.users.forEach(user => {\r\n      querries.push(\r\n        CodAPI.getUserStats(user).then(\r\n          result => {\r\n            this.state.data[user] = result;\r\n          },\r\n          error => {\r\n            this.setState({ isLoaded: true, error });\r\n          }\r\n        )\r\n      );\r\n    });\r\n\r\n    Promise.all(querries).then(() => {\r\n      this.state.isLoaded = true;\r\n      this.forceUpdate();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, data } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Table celled inverted>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell />\r\n                {this.state.users.map(user => (\r\n                  <Table.HeaderCell>{user}</Table.HeaderCell>\r\n                ))}\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              <Table.Row>\r\n                <Table.Cell>Longest Killstreak</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>{data[user].stats.longestkillstreak}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Current win streak</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>{data[user].stats.curwinstreak}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Playtime</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>{time(data[user].stats.timeplayed)}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>K/D</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {(data[user].stats.kills / data[user].stats.deaths).toFixed(\r\n                      2\r\n                    )}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>EKIA/D</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {(data[user].stats.ekia / data[user].stats.deaths).toFixed(\r\n                      2\r\n                    )}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Accuracy</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {accuracy(data[user].stats.hits, data[user].stats.misses)}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Total kills</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>{data[user].stats.kills}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Assists</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {assists(data[user].stats.ekia, data[user].stats.kills)}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>W/L</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {(data[user].stats.wins / data[user].stats.losses).toFixed(\r\n                      2\r\n                    )}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Prestige-Level</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {data[user].stats.prestige} - {data[user].stats.level}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction accuracy(hit, miss) { //I guess they never miss, uh?\r\n  let accuracy = hit / miss;\r\n  let percent = (accuracy * 100).toFixed(2);\r\n  return `${percent}%`;\r\n}\r\n\r\nfunction assists(ekia, kills) {\r\n  let assists = ekia - kills;\r\n  let percentage = ((assists * 100) / ekia).toFixed(0);\r\n  return `${assists} (${percentage}%)`;\r\n}\r\n\r\nfunction time(seconds) {\r\n  let duration = moment.duration(seconds * 1000);\r\n  let days = Math.floor(duration.asDays());\r\n  let hours = Math.floor(duration.asHours() - days * 24);\r\n  return `${days}d ${hours}h`;\r\n}\r\n\r\n/**\r\n\r\nAssists: ekia - kills (x%)\r\naccuracy\r\n */\r\n\r\nexport default UserStats;\r\n","import React, { Component } from \"react\";\r\nimport SearchBox from \"./search/SearchBox\";\r\nimport UserStats from \"./search/UserStats\";\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <main className=\"col12 colm12 colt12\">\r\n        <SearchBox />\r\n        <UserStats />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"col12 colm12 colt12\">\r\n        <a href=\"www.github.com/Poke1650/bo4stats\">Fork on Github <Icon name=\"github\" size=\"large\"/></a>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from \"./component/Header\";\nimport Content from './component/Content';\nimport Footer from './component/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}