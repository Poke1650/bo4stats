{"version":3,"sources":["component/Header.js","component/search/SearchBox.js","api/util/APIRequestHandler.js","api/cod-api/Endpoints.js","api/cod-api/Games.js","api/cod-api/Platforms.js","api/cod-api/CodAPI.js","component/stats/SimpleStatRow.js","component/stats/RatioStatRow.js","component/stats/UserStats.js","component/Content.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","SearchBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateQuery","e","data","document","getElementById","value","state","savedSearches","getStoredSearches","searches","localStorage","getItem","JSON","parse","query","searchArray","push","id","text","setItem","stringify","setState","_this2","Input","icon","Icon","name","inverted","circular","link","onClick","searchHandler","placeholder","Dropdown","selection","options","onChange","Button","saveQuery","deleteQuery","APIRequestHandler","url","fetch","then","res","json","body","method","BASE","Endpoints","VALIDATE","STATS","MATCHES","Games","BO4","BO3","WWII","INFINITY_WAR","Platforms","PSN","XBOX_LIVE","STEAM","BATTLE_NET","sanitizeUsername","username","replace","CodAPI","game","arguments","length","undefined","platform","concat","console","log","SimpleStatRow","users","stat","title","Table","Row","Cell","collapsing","map","user","stats","RatioStatRow","precision","ratio","val1","val2","toFixed","UserStats","error","shouldUpdate","isLoaded","querries","forEach","getUserStats","result","Promise","all","newProps","_this3","_this$state","userxdata","message","celled","HeaderCell","key","Body","stats_SimpleStatRow","seconds","duration","moment","days","Math","floor","asDays","hours","asHours","time","timeplayed","stats_RatioStatRow","hit","miss","percent","accuracy","hits","misses","ekia","kills","assists","percentage","prestige","level","Loader","active","inline","Content","usersSearched","split","search_SearchBox","handleSearch","bind","stats_UserStats","Footer","href","size","App","component_Header","component_Content","component_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71c69347.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"col12 colm12 colt12 header\">\r\n        <h1>BO4Stats</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Input, Button, Dropdown } from \"semantic-ui-react\";\r\n\r\nclass SearchBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      savedSearches: this.getStoredSearches()\r\n    };\r\n  }\r\n\r\n  getStoredSearches() {\r\n    let searches = localStorage.getItem(\"searches\");\r\n    return searches === null ? [] : JSON.parse(searches);\r\n  }\r\n\r\n  saveQuery() {\r\n    let query = document.getElementById(\"query\").value;\r\n\r\n    let searches = localStorage.getItem(\"searches\");\r\n    let searchArray = searches === null ? [] : JSON.parse(searches);\r\n    searchArray.push({ id: 1, value: query, text: query });\r\n    localStorage.setItem(\"searches\", JSON.stringify(searchArray));\r\n\r\n    this.setState({savedSearches: this.getStoredSearches()}); //Update stored searches\r\n  }\r\n\r\n  deleteQuery() {}\r\n\r\n  updateQuery = (e, data) => {\r\n    document.getElementById(\"query\").value = data.value;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <h1>Search users</h1>\r\n        <div className=\"col12 colt12 colm12\">\r\n          <Input\r\n            id=\"query\"\r\n            className=\"col6 colt6 colm11\"\r\n            icon={\r\n              <Icon\r\n                name=\"search\"\r\n                inverted\r\n                circular\r\n                link\r\n                onClick={() =>\r\n                  this.props.searchHandler(\r\n                    document.getElementById(\"query\").value\r\n                  )\r\n                }\r\n              />\r\n            }\r\n            placeholder=\"Separated by , or spaces\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col12 colt12 colm12 padding-top\">\r\n          <Dropdown\r\n            className=\"col4 colt12 colm12\"\r\n            placeholder=\"Searches\"\r\n            selection\r\n            options={this.state.savedSearches}\r\n            onChange={this.updateQuery}\r\n          />\r\n          <Button onClick={() => this.saveQuery()} className=\"col1\" icon>\r\n            Save\r\n            <Icon name=\"save outline\" />\r\n          </Button>\r\n          <Button onClick={() => this.deleteQuery()} className=\"col1\" icon>\r\n            Delete\r\n            <Icon name=\"delete\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","class APIRequestHandler {\r\n  /**\r\n   * Query the given url and return a promise with the data in json\r\n   * @param {string} url the url to query\r\n   */\r\n  static query(url) {\r\n    return fetch(url).then(res => res.json());\r\n  }\r\n\r\n  /**\r\n   * Post JSON data to a given URL\r\n   * @param {string} url the url to post to\r\n   * @param {json} body Json objet to post\r\n   */\r\n  static post(url, body) {\r\n    return fetch(url, { method: \"POST\", body: JSON.stringify(body) }).then(\r\n      res => res.json()\r\n    );\r\n  }\r\n}\r\n\r\nexport default APIRequestHandler;\r\n","const BASE = 'https://cod-api.theapinetwork.com/api/';\r\n\r\nconst Endpoints = {\r\n    VALIDATE: BASE + 'validate',\r\n    STATS: BASE + 'stats',\r\n    MATCHES: BASE + 'matches'\r\n}\r\n\r\nexport default Endpoints;","const Games = {\r\n    BO4: 'bo4',\r\n    BO3: 'bo3',\r\n    WWII: 'wwii',\r\n    INFINITY_WAR: 'iw'\r\n}\r\n\r\nexport default Games;","const Platforms = {\r\n    PSN: 'psn',\r\n    XBOX_LIVE: 'xbl',\r\n    STEAM: 'steam',\r\n    BATTLE_NET: 'bnet'\r\n}\r\n\r\nexport default Platforms;","import APIRequestHandler from '../util/APIRequestHandler';\r\nimport Endpoints from './Endpoints';\r\nimport Games from './Games';\r\nimport Platforms from './Platforms';\r\n\r\nclass CodAPI {\r\n    static validate(username, game = Games.BO4 , platform = Platforms.BATTLE_NET) {\r\n        return APIRequestHandler.query(`${Endpoints.VALIDATE}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n    }\r\n\r\n    static getUserStats(username, game = Games.BO4 , platform = Platforms.BATTLE_NET) {\r\n        console.log(`${Endpoints.STATS}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n        return APIRequestHandler.query(`${Endpoints.STATS}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} username\r\n */\r\nfunction sanitizeUsername(username) {\r\n    return username.replace('#', '%23');\r\n}\r\n\r\nexport default CodAPI;","import React, { Component } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nclass SimpleStatRow extends Component {\r\n  render() {\r\n    let data = this.props.data.data;\r\n    let users = this.props.data.users;\r\n    let stat = this.props.stat;\r\n    let title = this.props.title;\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell collapsing>{title}</Table.Cell>\r\n        {users.map(user => (\r\n          <Table.Cell>{data[user].stats[stat]}</Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleStatRow;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nclass RatioStatRow extends Component {\r\n  render() {\r\n    let data = this.props.data.data;\r\n    let users = this.props.data.users;\r\n    let stats = this.props.stats;\r\n    let precision = this.props.precision === undefined ? 2 : this.props.precision;\r\n    let title = this.props.title;\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell collapsing>{title}</Table.Cell>\r\n        {users.map(user => (\r\n          <Table.Cell>\r\n            {this.ratio(data[user].stats[stats[0]], data[user].stats[stats[1]], precision)}\r\n          </Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    );\r\n  }\r\n\r\n  ratio(val1, val2, precision = 2) {\r\n    return (val1 / val2).toFixed(precision);\r\n  }\r\n}\r\n\r\nexport default RatioStatRow;\r\n","import React, { Component } from \"react\";\r\nimport CodAPI from \"../../api/cod-api/CodAPI\";\r\nimport { Table, Loader } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nimport SimpleStatRow from \"./SimpleStatRow\";\r\nimport RatioStatRow from \"./RatioStatRow\";\r\n\r\nclass UserStats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      shouldUpdate: true,\r\n      isLoaded: false,\r\n      data: [],\r\n      users: this.props.users\r\n    };\r\n  }\r\n\r\n  query() {\r\n    let querries = [];\r\n\r\n    this.state.users.forEach(user => {\r\n      querries.push(\r\n        CodAPI.getUserStats(user).then(\r\n          result => {\r\n            this.state.data[user] = result;\r\n          },\r\n          error => {\r\n            this.setState({ isLoaded: true, error });\r\n          }\r\n        )\r\n      );\r\n    });\r\n\r\n    Promise.all(querries).then(() => {\r\n      this.setState({ isLoaded: true });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.query();\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    this.setState({ users: newProps.users, isLoaded: false }, () => this.query());\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, data } = this.state;\r\n\r\n    const userxdata = {\r\n      users: this.state.users,\r\n      data: data\r\n    };\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return (\r\n        <Loader active inline='centered' />\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Table celled inverted>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell />\r\n                {this.state.users.map(user => (\r\n                  <Table.HeaderCell key={user}>{user}</Table.HeaderCell>\r\n                ))}\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              <SimpleStatRow\r\n                data={userxdata}\r\n                stat=\"longestkillstreak\"\r\n                title=\"Longest Killstreak\"\r\n              />\r\n\r\n              <SimpleStatRow\r\n                data={userxdata}\r\n                stat=\"curwinstreak\"\r\n                title=\"Current win streak\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell collapsing>Playtime</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>{time(data[user].stats.timeplayed)}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <RatioStatRow\r\n                data={userxdata}\r\n                stats={[\"kills\", \"deaths\"]}\r\n                title=\"K/D\"\r\n              />\r\n\r\n              <RatioStatRow\r\n                data={userxdata}\r\n                stats={[\"ekia\", \"deaths\"]}\r\n                title=\"EKIA/D\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell collapsing>Accuracy</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {accuracy(data[user].stats.hits, data[user].stats.misses)}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <SimpleStatRow\r\n                data={userxdata}\r\n                stat=\"kills\"\r\n                title=\"Total kills\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell collapsing>Assists</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {assists(data[user].stats.ekia, data[user].stats.kills)}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <RatioStatRow\r\n                data={userxdata}\r\n                stats={[\"wins\", \"losses\"]}\r\n                title=\"W/L\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell collapsing>Prestige-Level</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {data[user].stats.prestige} - {data[user].stats.level}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction accuracy(hit, miss) {\r\n  //I guess they never miss, uh?\r\n  let accuracy = hit / miss;\r\n  let percent = (accuracy * 100).toFixed(2);\r\n  return `${percent}%`;\r\n}\r\n\r\nfunction assists(ekia, kills) {\r\n  let assists = ekia - kills;\r\n  let percentage = ((assists * 100) / ekia).toFixed(0);\r\n  return `${assists} (${percentage}%)`;\r\n}\r\n\r\nfunction time(seconds) {\r\n  let duration = moment.duration(seconds * 1000);\r\n  let days = Math.floor(duration.asDays());\r\n  let hours = Math.floor(duration.asHours() - days * 24);\r\n  return `${days}d ${hours}h`;\r\n}\r\n\r\nexport default UserStats;\r\n","import React, { Component } from \"react\";\r\nimport SearchBox from \"./search/SearchBox\";\r\nimport UserStats from \"./stats/UserStats\";\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: []\r\n    };\r\n  }\r\n\r\n  handleSearch(query) {\r\n    let usersSearched = query.split(/[\\s,;]+/);\r\n    this.setState({ users: usersSearched });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"col12 colm12 colt12\">\r\n        <SearchBox searchHandler={this.handleSearch.bind(this)} />\r\n        {this.state.users.length !== 0 ? (\r\n          <UserStats users={this.state.users} />\r\n        ) : null}\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"col12 colm12 colt12\">\r\n        <a href=\"http://www.github.com/Poke1650/bo4stats\">Fork on Github <Icon name=\"github\" size=\"large\"/></a>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from \"./component/Header\";\nimport Content from './component/Content';\nimport Footer from './component/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}