{"version":3,"sources":["component/Header.js","component/search/SearchBar.js","component/search/SearchBox.js","api/util/APIRequestHandler.js","api/cod-api/Endpoints.js","api/cod-api/Games.js","api/cod-api/Platforms.js","api/cod-api/CodAPI.js","component/stats/SimpleStatRow.js","component/stats/RatioStatRow.js","component/stats/UserStats.js","component/Content.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","SearchBar","Input","icon","Icon","name","inverted","circular","link","placeholder","SearchBox","search_SearchBar","APIRequestHandler","url","fetch","then","res","json","body","method","JSON","stringify","BASE","Endpoints","VALIDATE","STATS","MATCHES","Games","BO4","BO3","WWII","INFINITY_WAR","Platforms","PSN","XBOX_LIVE","STEAM","BATTLE_NET","sanitizeUsername","username","replace","CodAPI","game","arguments","length","undefined","platform","query","concat","console","log","SimpleStatRow","data","this","props","users","stat","title","Table","Row","Cell","map","user","stats","RatioStatRow","_this","precision","ratio","val1","val2","toFixed","UserStats","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","error","shouldUpdate","isLoaded","_this2","querries","forEach","push","getUserStats","result","setState","Promise","all","forceUpdate","_this$state","userxdata","message","celled","HeaderCell","Body","stats_SimpleStatRow","seconds","duration","moment","days","Math","floor","asDays","hours","asHours","time","timeplayed","stats_RatioStatRow","hit","miss","percent","accuracy","hits","misses","ekia","kills","assists","percentage","prestige","level","Content","search_SearchBox","stats_UserStats","Footer","href","size","App","component_Header","component_Content","component_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+QAaeA,2LARX,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,8BAChBH,EAAAC,EAAAC,cAAA,8BAJaE,gCCQNC,mLANT,OACEL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOC,KAAMP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,SAASC,UAAQ,EAACC,UAAQ,EAACC,MAAI,IAAKC,YAAY,qBAHxDT,aCWTU,mLATX,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACa,EAAD,cALgBX,aCkBTY,qGAhBAC,GACX,OAAOC,MAAMD,GAAKE,KAAK,SAAAC,GAAG,OAAIA,EAAIC,sCAQxBJ,EAAKK,GACf,OAAOJ,MAAMD,EAAK,CAAEM,OAAQ,OAAQD,KAAME,KAAKC,UAAUH,KAASH,KAChE,SAAAC,GAAG,OAAIA,EAAIC,kBChBXK,EAAO,yCAQEC,EANG,CACdC,SAAUF,EAAO,WACjBG,MAAOH,EAAO,QACdI,QAASJ,EAAO,WCELK,EAPD,CACVC,IAAK,MACLC,IAAK,MACLC,KAAM,OACNC,aAAc,MCGHC,EAPG,CACdC,IAAK,MACLC,UAAW,MACXC,MAAO,QACPC,WAAY,QCgBhB,SAASC,EAAiBC,GACtB,OAAOA,EAASC,QAAQ,IAAK,OAGlBC,4GAlBKF,GAA8D,IAApDG,EAAoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7Cf,EAAMC,IAAMiB,EAAiCH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBV,EAAUI,WAC9D,OAAOxB,EAAkBkC,MAAlB,GAAAC,OAA2BxB,EAAUC,SAArC,KAAAuB,OAAiDN,EAAjD,KAAAM,OAAyDV,EAAiBC,GAA1E,KAAAS,OAAuFF,yCAG9EP,GAA8D,IAApDG,EAAoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7Cf,EAAMC,IAAMiB,EAAiCH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBV,EAAUI,WAElE,OADAY,QAAQC,IAAR,GAAAF,OAAexB,EAAUE,MAAzB,KAAAsB,OAAkCN,EAAlC,KAAAM,OAA0CV,EAAiBC,GAA3D,KAAAS,OAAwEF,IACjEjC,EAAkBkC,MAAlB,GAAAC,OAA2BxB,EAAUE,MAArC,KAAAsB,OAA8CN,EAA9C,KAAAM,OAAsDV,EAAiBC,GAAvE,KAAAS,OAAoFF,wCCQpFK,mLAfX,IAAIC,EAAOC,KAAKC,MAAMF,KAAKA,KACvBG,EAAQF,KAAKC,MAAMF,KAAKG,MACxBC,EAAOH,KAAKC,MAAME,KAClBC,EAAQJ,KAAKC,MAAMG,MACvB,OACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KAAaH,GACZF,EAAMM,IAAI,SAAAC,GAAI,OACbjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KAAaR,EAAKU,GAAMC,MAAMP,cAVZvD,aCwBb+D,mLAvBJ,IAAAC,EAAAZ,KACHD,EAAOC,KAAKC,MAAMF,KAAKA,KACvBG,EAAQF,KAAKC,MAAMF,KAAKG,MACxBQ,EAAQV,KAAKC,MAAMS,MACnBG,OAAqCrB,IAAzBQ,KAAKC,MAAMY,UAA0B,EAAIb,KAAKC,MAAMY,UAChET,EAAQJ,KAAKC,MAAMG,MACvB,OACE5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KAAaH,GACZF,EAAMM,IAAI,SAAAC,GAAI,OACbjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KACGK,EAAKE,MAAMf,EAAKU,GAAMC,MAAMA,EAAM,IAAKX,EAAKU,GAAMC,MAAMA,EAAM,IAAKG,qCAOxEE,EAAMC,GAAqB,IAAfH,EAAevB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EAC5B,OAAQyB,EAAOC,GAAMC,QAAQJ,UApBNjE,aCiKZsE,kBA3Jb,SAAAA,EAAYjB,GAAO,IAAAW,EAAA,OAAAO,OAAAC,EAAA,EAAAD,CAAAnB,KAAAkB,IACjBN,EAAAO,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAvB,KAAMC,KACDuB,MAAQ,CACXC,MAAO,KACPC,cAAc,EACdC,UAAU,EACV5B,KAAM,GACNG,MAAO,CAAC,cAAe,eAAgB,aAAc,eAPtCU,mFAWC,IAAAgB,EAAA5B,KACd6B,EAAW,GAEf7B,KAAKwB,MAAMtB,MAAM4B,QAAQ,SAAArB,GACvBoB,EAASE,KACP3C,EAAO4C,aAAavB,GAAM9C,KACxB,SAAAsE,GACEL,EAAKJ,MAAMzB,KAAKU,GAAQwB,GAE1B,SAAAR,GACEG,EAAKM,SAAS,CAAEP,UAAU,EAAMF,eAMxCU,QAAQC,IAAIP,GAAUlE,KAAK,WACzBiE,EAAKJ,MAAMG,UAAW,EACtBC,EAAKS,iDAIA,IAAAC,EAC2BtC,KAAKwB,MAA/BC,EADDa,EACCb,MAAOE,EADRW,EACQX,SAAU5B,EADlBuC,EACkBvC,KAEnBwC,EAAY,CAChBrC,MAAOF,KAAKwB,MAAMtB,MAClBH,KAAMA,GAGR,OAAI0B,EACKjF,EAAAC,EAAAC,cAAA,qBAAa+E,EAAMe,SAChBb,EAIRnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAOoC,QAAM,EAACvF,UAAQ,GACpBV,EAAAC,EAAAC,cAAC2D,EAAA,EAAM9D,OAAP,KACEC,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMqC,WAAP,MACC1C,KAAKwB,MAAMtB,MAAMM,IAAI,SAAAC,GAAI,OACxBjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAMqC,WAAP,KAAmBjC,OAIzBjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAMsC,KAAP,KACEnG,EAAAC,EAAAC,cAACkG,EAAD,CACE7C,KAAMwC,EACNpC,KAAK,oBACLC,MAAM,uBAGR5D,EAAAC,EAAAC,cAACkG,EAAD,CACE7C,KAAMwC,EACNpC,KAAK,eACLC,MAAM,uBAGR5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,iBACCP,KAAKwB,MAAMtB,MAAMM,IAAI,SAAAC,GAAI,OACxBjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KA2ElB,SAAcsC,GACZ,IAAIC,EAAWC,IAAOD,SAAmB,IAAVD,GAC3BG,EAAOC,KAAKC,MAAMJ,EAASK,UAC3BC,EAAQH,KAAKC,MAAMJ,EAASO,UAAmB,GAAPL,GAC5C,SAAArD,OAAUqD,EAAV,MAAArD,OAAmByD,EAAnB,KA/E6BE,CAAKvD,EAAKU,GAAMC,MAAM6C,gBAIvC/G,EAAAC,EAAAC,cAAC8G,EAAD,CACEzD,KAAMwC,EACN7B,MAAO,CAAC,QAAS,UACjBN,MAAM,QAGR5D,EAAAC,EAAAC,cAAC8G,EAAD,CACEzD,KAAMwC,EACN7B,MAAO,CAAC,OAAQ,UAChBN,MAAM,WAGR5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,iBACCP,KAAKwB,MAAMtB,MAAMM,IAAI,SAAAC,GAAI,OACxBjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KA2ClB,SAAkBkD,EAAKC,GAErB,IACIC,GADWF,EAAMC,EACK,KAAKzC,QAAQ,GACvC,SAAAtB,OAAUgE,EAAV,KA9CmBC,CAAS7D,EAAKU,GAAMC,MAAMmD,KAAM9D,EAAKU,GAAMC,MAAMoD,YAKxDtH,EAAAC,EAAAC,cAACkG,EAAD,CACE7C,KAAMwC,EACNpC,KAAK,QACLC,MAAM,gBAGR5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,gBACCP,KAAKwB,MAAMtB,MAAMM,IAAI,SAAAC,GAAI,OACxBjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KAmClB,SAAiBwD,EAAMC,GACrB,IAAIC,EAAUF,EAAOC,EACjBE,GAAyB,IAAVD,EAAiBF,GAAM9C,QAAQ,GAClD,SAAAtB,OAAUsE,EAAV,MAAAtE,OAAsBuE,EAAtB,MArCmBD,CAAQlE,EAAKU,GAAMC,MAAMqD,KAAMhE,EAAKU,GAAMC,MAAMsD,WAKvDxH,EAAAC,EAAAC,cAAC8G,EAAD,CACEzD,KAAMwC,EACN7B,MAAO,CAAC,OAAQ,UAChBN,MAAM,QAGR5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAMC,IAAP,KACE9D,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,uBACCP,KAAKwB,MAAMtB,MAAMM,IAAI,SAAAC,GAAI,OACxBjE,EAAAC,EAAAC,cAAC2D,EAAA,EAAME,KAAP,KACGR,EAAKU,GAAMC,MAAMyD,SADpB,MACiCpE,EAAKU,GAAMC,MAAM0D,aA/EvD5H,EAAAC,EAAAC,cAAA,gCA7CWE,aCOTyH,mLATX,OACE7H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACdH,EAAAC,EAAAC,cAAC4H,EAAD,MACA9H,EAAAC,EAAAC,cAAC6H,EAAD,cALc3H,aCSP4H,mLARX,OACEhI,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAChBH,EAAAC,EAAAC,cAAA,KAAG+H,KAAK,2CAAR,kBAAiEjI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,KAAK,SAASyH,KAAK,mBAJ7E9H,aCgBN+H,mLAVX,OACEnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkI,EAAD,MACApI,EAAAC,EAAAC,cAACmI,EAAD,MACArI,EAAAC,EAAAC,cAACoI,EAAD,cANUlI,aCKEmI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO7I,EAAAC,EAAAC,cAAC4I,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhI,KAAK,SAAAiI,GACjCA,EAAaC","file":"static/js/main.9ba3d070.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"col12 colm12 colt12 header\">\r\n        <h1>BO4Stats</h1>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\nimport { Icon, Input } from 'semantic-ui-react'\r\n\r\nclass SearchBar extends Component {\r\n    render() {\r\n      return (\r\n        <Input icon={<Icon name='search' inverted circular link />} placeholder='Search...' />\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SearchBar;","import React, { Component } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nclass SearchBox extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <h1>Search user</h1>\r\n        <SearchBar />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBox;\r\n","class APIRequestHandler {\r\n  /**\r\n   * Query the given url and return a promise with the data in json\r\n   * @param {string} url the url to query\r\n   */\r\n  static query(url) {\r\n    return fetch(url).then(res => res.json());\r\n  }\r\n\r\n  /**\r\n   * Post JSON data to a given URL\r\n   * @param {string} url the url to post to\r\n   * @param {json} body Json objet to post\r\n   */\r\n  static post(url, body) {\r\n    return fetch(url, { method: \"POST\", body: JSON.stringify(body) }).then(\r\n      res => res.json()\r\n    );\r\n  }\r\n}\r\n\r\nexport default APIRequestHandler;\r\n","const BASE = 'https://cod-api.theapinetwork.com/api/';\r\n\r\nconst Endpoints = {\r\n    VALIDATE: BASE + 'validate',\r\n    STATS: BASE + 'stats',\r\n    MATCHES: BASE + 'matches'\r\n}\r\n\r\nexport default Endpoints;","const Games = {\r\n    BO4: 'bo4',\r\n    BO3: 'bo3',\r\n    WWII: 'wwii',\r\n    INFINITY_WAR: 'iw'\r\n}\r\n\r\nexport default Games;","const Platforms = {\r\n    PSN: 'psn',\r\n    XBOX_LIVE: 'xbl',\r\n    STEAM: 'steam',\r\n    BATTLE_NET: 'bnet'\r\n}\r\n\r\nexport default Platforms;","import APIRequestHandler from '../util/APIRequestHandler';\r\nimport Endpoints from './Endpoints';\r\nimport Games from './Games';\r\nimport Platforms from './Platforms';\r\n\r\nclass CodAPI {\r\n    static validate(username, game = Games.BO4 , platform = Platforms.BATTLE_NET) {\r\n        return APIRequestHandler.query(`${Endpoints.VALIDATE}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n    }\r\n\r\n    static getUserStats(username, game = Games.BO4 , platform = Platforms.BATTLE_NET) {\r\n        console.log(`${Endpoints.STATS}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n        return APIRequestHandler.query(`${Endpoints.STATS}/${game}/${sanitizeUsername(username)}/${platform}`);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} username\r\n */\r\nfunction sanitizeUsername(username) {\r\n    return username.replace('#', '%23');\r\n}\r\n\r\nexport default CodAPI;","import React, { Component } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nclass SimpleStatRow extends Component {\r\n  render() {\r\n    let data = this.props.data.data;\r\n    let users = this.props.data.users;\r\n    let stat = this.props.stat;\r\n    let title = this.props.title;\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{title}</Table.Cell>\r\n        {users.map(user => (\r\n          <Table.Cell>{data[user].stats[stat]}</Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleStatRow;\r\n","import React, { Component } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\n\r\nclass RatioStatRow extends Component {\r\n  render() {\r\n    let data = this.props.data.data;\r\n    let users = this.props.data.users;\r\n    let stats = this.props.stats;\r\n    let precision = this.props.precision === undefined ? 2 : this.props.precision;\r\n    let title = this.props.title;\r\n    return (\r\n      <Table.Row>\r\n        <Table.Cell>{title}</Table.Cell>\r\n        {users.map(user => (\r\n          <Table.Cell>\r\n            {this.ratio(data[user].stats[stats[0]], data[user].stats[stats[1]], precision)}\r\n          </Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    );\r\n  }\r\n\r\n  ratio(val1, val2, precision = 2) {\r\n    return (val1 / val2).toFixed(precision);\r\n  }\r\n}\r\n\r\nexport default RatioStatRow;\r\n","import React, { Component } from \"react\";\r\nimport CodAPI from \"../../api/cod-api/CodAPI\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nimport SimpleStatRow from \"./SimpleStatRow\";\r\nimport RatioStatRow from \"./RatioStatRow\";\r\n\r\nclass UserStats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      shouldUpdate: true,\r\n      isLoaded: false,\r\n      data: [],\r\n      users: [\"izotov#1214\", \"ozakin#11581\", \"cremz#1991\", \"yskio#1216\"]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let querries = [];\r\n\r\n    this.state.users.forEach(user => {\r\n      querries.push(\r\n        CodAPI.getUserStats(user).then(\r\n          result => {\r\n            this.state.data[user] = result;\r\n          },\r\n          error => {\r\n            this.setState({ isLoaded: true, error });\r\n          }\r\n        )\r\n      );\r\n    });\r\n\r\n    Promise.all(querries).then(() => {\r\n      this.state.isLoaded = true;\r\n      this.forceUpdate();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, data } = this.state;\r\n\r\n    const userxdata = {\r\n      users: this.state.users,\r\n      data: data\r\n    };\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Table celled inverted>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell />\r\n                {this.state.users.map(user => (\r\n                  <Table.HeaderCell>{user}</Table.HeaderCell>\r\n                ))}\r\n              </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n              <SimpleStatRow\r\n                data={userxdata}\r\n                stat=\"longestkillstreak\"\r\n                title=\"Longest Killstreak\"\r\n              />\r\n\r\n              <SimpleStatRow\r\n                data={userxdata}\r\n                stat=\"curwinstreak\"\r\n                title=\"Current win streak\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Playtime</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>{time(data[user].stats.timeplayed)}</Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <RatioStatRow\r\n                data={userxdata}\r\n                stats={[\"kills\", \"deaths\"]}\r\n                title=\"K/D\"\r\n              />\r\n\r\n              <RatioStatRow\r\n                data={userxdata}\r\n                stats={[\"ekia\", \"deaths\"]}\r\n                title=\"EKIA/D\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Accuracy</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {accuracy(data[user].stats.hits, data[user].stats.misses)}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <SimpleStatRow\r\n                data={userxdata}\r\n                stat=\"kills\"\r\n                title=\"Total kills\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Assists</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {assists(data[user].stats.ekia, data[user].stats.kills)}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n\r\n              <RatioStatRow\r\n                data={userxdata}\r\n                stats={[\"wins\", \"losses\"]}\r\n                title=\"W/L\"\r\n              />\r\n\r\n              <Table.Row>\r\n                <Table.Cell>Prestige-Level</Table.Cell>\r\n                {this.state.users.map(user => (\r\n                  <Table.Cell>\r\n                    {data[user].stats.prestige} - {data[user].stats.level}\r\n                  </Table.Cell>\r\n                ))}\r\n              </Table.Row>\r\n            </Table.Body>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction accuracy(hit, miss) {\r\n  //I guess they never miss, uh?\r\n  let accuracy = hit / miss;\r\n  let percent = (accuracy * 100).toFixed(2);\r\n  return `${percent}%`;\r\n}\r\n\r\nfunction assists(ekia, kills) {\r\n  let assists = ekia - kills;\r\n  let percentage = ((assists * 100) / ekia).toFixed(0);\r\n  return `${assists} (${percentage}%)`;\r\n}\r\n\r\nfunction time(seconds) {\r\n  let duration = moment.duration(seconds * 1000);\r\n  let days = Math.floor(duration.asDays());\r\n  let hours = Math.floor(duration.asHours() - days * 24);\r\n  return `${days}d ${hours}h`;\r\n}\r\n\r\nexport default UserStats;\r\n","import React, { Component } from \"react\";\r\nimport SearchBox from \"./search/SearchBox\";\r\nimport UserStats from \"./stats/UserStats\";\r\n\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <main className=\"col12 colm12 colt12\">\r\n        <SearchBox />\r\n        <UserStats />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"col12 colm12 colt12\">\r\n        <a href=\"http://www.github.com/Poke1650/bo4stats\">Fork on Github <Icon name=\"github\" size=\"large\"/></a>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Header from \"./component/Header\";\nimport Content from './component/Content';\nimport Footer from './component/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}